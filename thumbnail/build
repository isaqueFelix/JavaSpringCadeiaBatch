#!/bin/bash

# Env Vars:
# REGISTRY: name of the image registry/namespace to store the images
# NOCACHE: set this to "--no-cache" to turn off the Docker build cache
#
# NOTE: to run this you MUST set the REGISTRY environment variable to
# your own image registry/namespace otherwise the `docker push` commands
# will fail due to an auth failure. Which means, you also need to be logged
# into that registry before you run it.

set -ex
export REGISTRY=${REGISTRY:-icr.io/codeengine}

# First build and push v1 of our app - notice no tag on the image name
cd v1
docker build ${NOCACHE} -t ${REGISTRY}/thumbnail .
docker push ${REGISTRY}/thumbnail:latest
cd ..

# Now build and push v2, but we have an app and a job this time
cd v2
docker build ${NOCACHE} -t ${REGISTRY}/thumbnail:v2 -f Dockerfile.app .
docker build ${NOCACHE} -t ${REGISTRY}/thumbnail-job -f Dockerfile.job .
docker push ${REGISTRY}/thumbnail:v2
docker push ${REGISTRY}/thumbnail-job
cd ..

# And finally build the event processor. The tutorial will build this
# but let's build/push it in case people need a pre-built one
cd eventer
docker build ${NOCACHE} -t ${REGISTRY}/thumbnail-eventer .
docker push ${REGISTRY}/thumbnail-eventer
cd ..
